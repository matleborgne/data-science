= Module =

<source lang="python3">
def src_targeting(srcPath:str, srcStruct:dict):
    # This module aims to organize your source files automatically,
    # through patterns in filenames.
    
    # srcPath   : path of source data
    # srcStruct : label of source type, pattern of source type in files
    
    import pandas as pd, os
    
    # Listing files in directory
    fileList = [os.path.join(root, name) \
    for root, dirs, files in os.walk(srcPath) \
    for name in files]

    # Creation of a source dataframe with categories/type of source
    dfSource = pd.DataFrame()
    for label,pattern in srcStruct.items():
        targetList = pd.Series(fileList)\
            [pd.Series(fileList).str.contains(rf'{pattern}')].values
        dfSource[label] = pd.Series(targetList)
    
    return dfSource
</source>

= Howto =

<source lang="python3">
 # Variables
srcPath = '/home/mleborgne/test'
srcStruct = {'achats':'journal-HA', \
             'ventes':'journal-VT'}

 # Usage
dfSource = src_targeting(srcPath, srcStruct)

dfSource.head()
</source>

<source>
Out[]:
|   |               achats                |               ventes                |
| 0 | ../source/File _ journal-HA_S1.txt  | ../source/File _ journal-VT_S1.txt  |
| 1 | ../source/File _ journal-HA_S2.txt  | ../source/File _ journal-VT_S2.txt  |
</source>


= Explanations =

This module aims to organize your source files automatically, through patterns in filenames.

What it does is :
* '''imports modules''' pandas and os ;
* '''lists files''' in the folder specified by srcPath ;
* '''creates a DataFrame''' where each column has a label and is filled with files which all have a specific pattern.

Thus, it needs the following input :
* srcPath, the path of source files in a string variable ;
* srcStruct, the structure you want for your DataFrame, in a dictionnary variable {'label':'pattern'}.
